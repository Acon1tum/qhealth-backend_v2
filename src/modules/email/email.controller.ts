import { Request, Response } from 'express';
import { EmailService } from './email.service';

const emailService = new EmailService();

export const sendEmail = async (req: Request, res: Response) => {
  try {
    const { to, subject, text, html } = req.body;
    if (!to || !subject || (!text && !html)) {
      return res.status(400).json({ message: 'Missing required fields: to, subject, and text or html.' });
    }

    // If no HTML provided but text is JSON, try to format as a professional HTML report
    let formattedHtml = html;
    if (!html && text) {
      try {
        const data = typeof text === 'string' ? JSON.parse(text) : text;
        formattedHtml = buildProfessionalReportHtml(data);
      } catch (e) {
        formattedHtml = `<pre>${text}</pre>`;
      }
    }

    const info = await emailService.sendMail({ to, subject, text, html: formattedHtml });
    res.status(200).json({ message: 'Email sent', info });
  } catch (error: any) {
    res.status(500).json({ message: 'Failed to send email', error: error.message });
  }
};

// Helper to build a professional HTML report from scan results
function buildProfessionalReportHtml(results: any[]): string {
  if (!Array.isArray(results)) return '<pre>Invalid results format</pre>';
  let tableRows = results.map(result => `
    <tr>
      <td><b>${result.title || ''}</b><br/><span style='font-size:12px;color:#888;'>${result.description || ''}</span></td>
      <td>${result.value || ''}</td>
      <td>${result.status || ''}</td>
      <td>${result.category || ''}</td>
    </tr>
  `).join('');
  return `
    <div style="font-family:Arial,sans-serif;max-width:600px;margin:auto;">
      <h2 style="color:#2b6cb0;text-align:center;margin-bottom:8px;">Quanby Face Scan Health Report</h2>
      <p style="text-align:center;color:#555;margin-bottom:24px;">Here are your personalized health insights based on your recent face scan.</p>
      <table style="width:100%;border-collapse:collapse;margin-bottom:24px;">
        <thead>
          <tr style="background:#f7fafc;color:#2b6cb0;">
            <th style="padding:8px;border:1px solid #e2e8f0;">Metric</th>
            <th style="padding:8px;border:1px solid #e2e8f0;">Value</th>
            <th style="padding:8px;border:1px solid #e2e8f0;">Status</th>
            <th style="padding:8px;border:1px solid #e2e8f0;">Category</th>
          </tr>
        </thead>
        <tbody>
          ${tableRows}
        </tbody>
      </table>
      <div style="text-align:center;color:#888;font-size:12px;">This report was generated by Quanby Healthcare. For more details, contact your healthcare provider.</div>
    </div>
  `;
}
// Helper to convert JSON to HTML table
function jsonToHtmlTable(obj: any): string {
  if (Array.isArray(obj)) {
    return obj.map(jsonToHtmlTable).join('<br/>');
  }
  if (typeof obj === 'object' && obj !== null) {
    let rows = '';
    for (const key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        const value = obj[key];
        rows += `<tr><td style='padding:4px 8px; border:1px solid #ccc;'><b>${key}</b></td><td style='padding:4px 8px; border:1px solid #ccc;'>${typeof value === 'object' ? jsonToHtmlTable(value) : value}</td></tr>`;
      }
    }
    return `<table style='border-collapse:collapse; margin:8px 0;'>${rows}</table>`;
  }
  return String(obj);
} 